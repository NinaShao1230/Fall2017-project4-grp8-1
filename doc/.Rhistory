movietrain_a = read.csv("../output/movie_train_a.csv", header = FALSE)
movietrain_a = unlist(movietrain_a)
movie_train_a = matrix(0, 5055,5055)
movie_train_a[upper.tri(movie_train_a, diag=FALSE)] = unlist(movietrain_a)
movie_train_a = t(movie_train_a)
movie_train_a[upper.tri(movie_train_a, diag=FALSE)] = unlist(movietrain_a)
movie_train_a[1,2]
movie_train_a[2,1]
movie_train_a[5,7]
movie_train_a[7,5]
movie_train_a[7,7]
sqrt(length(webtrain_a)) # = 4151
print(mean(webtrain_a))
print(sd(webtrain_a))
print(mean(movie_train_a))
print(sd(movie_train_a))
a1 = i - sum(webtrain_a_n_5 == 1)
movie_train_a_5 = movie_train_a
n = 9
length(movietrain_a)
webtrain_a_n_5 = webtrain_a
n = 5
n = 5
?diag
x = matrix(1:100,10,10)
x
diag(x) = 0
x
webtrain_a_n_5 = webtrain_a
n = 5
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix_5, nrow = 4151, ncol = 4151)
diag(webtrain_a_matrix_5) = 0
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
webtrain_a_n_8 = webtrain_a
n = 8
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_8[i] = 1
}
else{
webtrain_a_n_8[i] = webtrain_a_n_5[i]/8
}
}
webtrain_a_matrix_8 = as.numeric(webtrain_a_n_8)
webtrain_a_matrix_8 = matrix(webtrain_a_matrix_8, nrow = 4151, ncol = 4151)
diag(webtrain_a) = 0
diag(webtrain_a_matrix_8) = 0
save(webtrain_a_matrix_8,file = "../output/webtrain_significance_weighting_n=8.Rdata")
webtrain_a_n_9 = webtrain_a
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_9[i] = 1
}
else{
webtrain_a_n_9[i] = webtrain_a_n_9[i]/9
}
}
webtrain_a_matrix_9 = as.numeric(webtrain_a_n_9)
webtrain_a_matrix_9 = matrix(webtrain_a_matrix_9, nrow = 4151, ncol = 4151)
diag(webtrain_a_matrix_9) = 0
save(webtrain_a_matrix_9,file = "../output/webtrain_significance_weighting_n=9.Rdata")
webtrain_a_n_10 = webtrain_a
webtrain_a_n_9 = webtrain_a
n = 9
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_9[i] = 1
}
else{
webtrain_a_n_9[i] = webtrain_a_n_9[i]/9
}
}
webtrain_a_matrix_9 = as.numeric(webtrain_a_n_9)
webtrain_a_matrix_9 = matrix(webtrain_a_matrix_9, nrow = 4151, ncol = 4151)
diag(webtrain_a_matrix_9) = 0
save(webtrain_a_matrix_9,file = "../output/webtrain_significance_weighting_n=9.Rdata")
webtrain_a_n_10 = webtrain_a
n = 10
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
webtrain_a_n_10 = webtrain_a
n = 10
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
webtrain_a_matrix_10 = as.numeric(webtrain_a_n_10)
webtrain_a_matrix_10 = matrix(webtrain_a_matrix_10, nrow = 4151, ncol = 4151)
diag(webtrain_a_matrix_10) = 0
save(webtrain_a_matrix_10,file = "../output/webtrain_significance_weighting_n=10.Rdata")
a1 = i - sum(webtrain_a_n_5 == 1)
a2 = i - sum(webtrain_a_n_8 == 1)
a3 = i - sum(webtrain_a_n_9 == 1)
a4 = i - sum(webtrain_a_n_10 == 1)
print(a1,a2,a3,a4)
a1 = (i - sum(webtrain_a_n_5 == 1))/17230801
a2 = (i - sum(webtrain_a_n_8 == 1))/17230801
a3 = (i - sum(webtrain_a_n_9 == 1))/17230801
a4 = (i - sum(webtrain_a_n_10 == 1))/17230801
movie_train_a_9 = movie_train_a
n = 9
movie_train_a_9 = movie_train_a
movie_train_a_9 = movie_train_a
n = 9
dim(movie_train_a)[1]
5055^2
movie_train_a_9 = movie_train_a
n = 9
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a[1])){
if(movie_train_a_9[x,y] >= n){
movie_train_a_9[x,y] = 1
}
else{
movie_train_a_9[x,y] = movie_train_a_9[x,y]/n
}
}
}
for(x in 1:dim(movie_train_a)[1]){
movie_train_a_9 = movie_train_a
n = 9
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_9[x,y] >= n){
movie_train_a_9[x,y] = 1
}
else{
movie_train_a_9[x,y] = movie_train_a_9[x,y]/n
}
}
}
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix_5, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
))OKP
movie_train_a_9 = movie_train_a
n = 9
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_9[x,y] >= n){
movie_train_a_9[x,y] = 1
}
else{
movie_train_a_9[x,y] = movie_train_a_9[x,y]/n
}
}
}
save(movie_train_a_9,file = "../output/movietrain_significance_weighting_n=9.Rdata")
mean(movie_train_a_9)
movie_train_a_9 = movie_train_a
n = 9
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_9[x,y] >= n){
movie_train_a_9[x,y] = 1
}
else{
movie_train_a_9[x,y] = movie_train_a_9[x,y]/n
}
}
}
mean(movie_train_a_9)
save(movie_train_a_9,file = "../output/movietrain_significance_weighting_n=9.Rdata")
mean(movie_train_a_9)
sd(movie_train_a_9)
movie_train_a_10 = movie_train_a
n = 10
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_10[x,y] >= n){
movie_train_a_10[x,y] = 1
}
else{
movie_train_a_10[x,y] = movie_train_a_10[x,y]/n
}
}
}
save(movie_train_a_10,file = "../output/movietrain_significance_weighting_n=10.Rdata")
movie_train_a_11 = movie_train_a
n = 11
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_11[x,y] >= n){
movie_train_a_11[x,y] = 1
}
else{
movie_train_a_11[x,y] = movie_train_a_11[x,y]/n
}
}
}
save(movie_train_a_11,file = "../output/movietrain_significance_weighting_n=11.Rdata")
movie_train_a_12 = movie_train_a
n = 12
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_12[x,y] >= n){
movie_train_a_12[x,y] = 1
}
else{
movie_train_a_12[x,y] = movie_train_a_12[x,y]/n
}
}
}
save(movie_train_a_12,file = "../output/movietrain_significance_weighting_n=12.Rdata")
a1 = (i - sum(movie_train_a_9 == 1))/25553025
a2 = (i - sum(movie_train_a_10 == 1))/25553025
a3 = (i - sum(movie_train_a_11 == 1))/25553025
a4 = (i - sum(movie_train_a_12 == 1))/25553025
movie_train_a_14 = movie_train_a
n = 14
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_14[x,y] >= n){
movie_train_a_14[x,y] = 1
}
else{
movie_train_a_14[x,y] = movie_train_a_14[x,y]/n
}
}
}
save(movie_train_a_14,file = "../output/movietrain_significance_weighting_n=14.Rdata")
a5 = (i - sum(movie_train_a_14 == 1))/25553025
print(mean(movie_train_a))
print(sd(movie_train_a))
movie_train_a_16 = movie_train_a
n = 16
for(x in 1:dim(movie_train_a)[1]){
for(y in 1:dim(movie_train_a)[1]){
if(movie_train_a_16[x,y] >= n){
movie_train_a_16[x,y] = 1
}
else{
movie_train_a_16[x,y] = movie_train_a_16[x,y]/n
}
}
}
save(movie_train_a_16,file = "../output/movietrain_significance_weighting_n=14.Rdata")
i=25553025
a1 = (i - sum(movie_train_a_9 == 1))/i
a2 = (i - sum(movie_train_a_10 == 1))/i
a3 = (i - sum(movie_train_a_11 == 1))/i
a4 = (i - sum(movie_train_a_12 == 1))/i
a5 = (i - sum(movie_train_a_14 == 1))/i
a6 = (i - sum(movie_train_a_16 == 1))/i
save(movie_train_a_9,file = "../output/movietrain_significance_weighting_n=9.Rdata")
save(movie_train_a_14,file = "../output/movietrain_significance_weighting_n=14.Rdata")
save(movie_train_a_16,file = "../output/movietrain_significance_weighting_n=16.Rdata")
a1 = (i - sum(movie_train_a_9 == 1))/i
a2 = (i - sum(movie_train_a_10 == 1))/i
a3 = (i - sum(movie_train_a_11 == 1))/i
a4 = (i - sum(movie_train_a_12 == 1))/i
a5 = (i - sum(movie_train_a_14 == 1))/i
a6 = (i - sum(movie_train_a_16 == 1))/i
setwd("~/Documents/GitHub/fall2017-project4-fall2017-proj4-grp8/doc")
setwd("~/Documents/GitHub/fall2017-project4-fall2017-proj4-grp8/doc")
load("../output/movietrain_significance_weighting_n=9.Rdata")
load("../output/movietrain_significance_weighting_n=14.Rdata")
load("../output/movietrain_significance_weighting_n=9.Rdata")
load("../output/movietrain_significance_weighting_n=10.Rdata")
load("../output/movietrain_significance_weighting_n=11.Rdata")
load("../output/movietrain_significance_weighting_n=12.Rdata")
load("../output/movietrain_significance_weighting_n=14.Rdata")
load("../output/movietrain_significance_weighting_n=16.Rdata")
load("../output/webtrain_significance_weighting_n=5.Rdata")
load("../output/webtrain_significance_weighting_n=8.Rdata")
load("../output/webtrain_significance_weighting_n=9.Rdata")
load("../output/webtrain_significance_weighting_n=10.Rdata")
load("../output/web.sp.sim.Rdata")
load("../output/web.entropy.sim.Rdata")
load("../output/web.msd.sim.Rdata")
setwd("~/Documents/GitHub/fall2017-project4-fall2017-proj4-grp8/doc")
source("../lib/significance weighting.Rmd")
knit_with_parameters('~/Documents/GitHub/fall2017-project4-fall2017-proj4-grp8/doc/main.Rmd')
load("../output/web.sp.sim.Rdata")
load("../output/web.msd.sim.Rdata")
load("../output/web.sp.sim.Rdata")
load("../output/web.msd.sim.Rdata")
load("../output/web.sp.sim.Rdata")
load("../output/web.msd.sim.Rdata")
load("../output/web.entropy.sim.Rdata")
dim(data1)
data1 = web.sp.sim
data2 = web.entropy.sim
data3 = web.msd.sim
dim(data1)
dim(data2)
dim(data3)
data1 = web.sp.sim
data2 = web.entropy.sim
data3 = web.msd.sim
# dimension of 3 dataset are all 4151 dimension square matrices.
mean(data1)
# dimension of 3 dataset are all 4151 dimension square matrices.
mean(data1)
# dimension of 3 dataset are all 4151 dimension square matrices.
mean(data1)
mean(data2)
mean(data3)
# dimension of 3 dataset are all 4151 dimension square matrices.
mean(data1)
mean(data2)
mean(data3)
mean(data1)
mean(data2)
mean(data3)
range(data1)
min(data1)
summary(data1)
range(data1)
range(data2)
range(data3)
mean(data1)
mean(data2)
mean(data3)
sd(data1)
sd(data1)
sd(data1)
sd(data2)
sd(data3)
hist(data1,100)
hist(data1,10)
hist(data1,100)
hist(data1,1000)
hist(data1,45)
hist(data1,30)
hist(data2,30)
hist(data3,30)
sqrt(17230801)
threshold1 = 0.8
threshold2 = 10
threshold3 = 0.3
n = 20
aaa<- function(x){
a1<- x[order(-x)][1:n]*(x[order(-x)][1:n]>=threshold)
a1[a1==0]<- NA
res<- which(x %in% a1)[1:n]
return(res)
}
t(apply(data1, 1, function(x) aaa(x)))
aaa<- function(x,threshold){
a1<- x[order(-x)][1:n]*(x[order(-x)][1:n]>=threshold)
a1[a1==0]<- NA
res<- which(x %in% a1)[1:n]
return(res)
}
t(apply(data1, 1, function(x) aaa(x)))
t(apply(data1, 1, function(x) aaa(x,threshold1)))
result = t(apply(data1, 1, function(x) aaa(x,threshold1)))
View(result)
diag(data1) = 0
data1 = web.sp.sim
diag(data1) = 0
data2 = web.entropy.sim
diag(data2) = 0
diag(data3) = 0
hist(data1,30)
hist(data2,30)
hist(data3,30)
aaa<- function(x,threshold){
a1<- x[order(-x)][1:n]*(x[order(-x)][1:n]>=threshold)
a1[a1==0]<- NA
res<- which(x %in% a1)[1:n]
return(res)
}
result = t(apply(data1, 1, function(x) aaa(x,threshold1)))
mode(result)
dim()
result
dim(result)
value_matrix = matrix(NA,dim(result)[1],dim(result[2]))
value_matrix = matrix(NA,dim(result)[1],dim(result)[2])
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
value_matrix = as.numeric(matrix(0,dim(result)[1],dim(result)[2]))
mode(result)
as.numeric()
result1 = as.numeric(result)
value_matrix = as.numeric(matrix(0,dim(result)[1],dim(result)[2]))
rm(result1)
View(result)
View(data1)
is.na(1)
is.na(value_matrix[1,2]) == FALSE
is.na(value_matrix) == FALSE
View(result)
value_matrix = as.numeric(matrix(0,dim(result)[1],dim(result)[2]))
for(x in 1:4151){
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,value_matrix[x,y]]
}
}
}
for(x in 1:4151){
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
dim(value_matrix)
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
View(value_matrix)
View(value_matrix)
mean(value_matrix)
mean(value_matrix)
View(value_matrix)
mean(rm.na(value_matrix))
na
mean(na.rm(value_matrix))
mean(value_matrix, na.rm = TRUE)
save(value_matrix, "../output/sn_web_sp_n=20_th=0.8")
save(value_matrix, "../output/sn_web_sp_n=20_th=0.8")
save(value_matrix, "../output/sn_web_sp_n=20_th=0.8.Rdata")
?save
save(value_matrix, file = "../output/sn_web_sp_n=20_th=0.8.Rdata")
data = data2
threshold = threshold2
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_web_entropy_n=20_th=10.Rdata")
View(value_matrix)
threshold2 = 8
data = data2
threshold = threshold2
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_web_entropy_n=20_th=8.Rdata")
data = data3
threshold = threshold3
result = t(apply(data, 1, function(x) aaa(x,threshold)))
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_web_msd_n=20_th=0.3.Rdata")
View(value_matrix)
threshold3 = 0.2
threshold3 = 0.25
data = data3
threshold = threshold3
result = t(apply(data, 1, function(x) aaa(x,threshold)))
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
View(value_matrix)
save(value_matrix, file = "../output/sn_web_msd_n=20_th=0.25.Rdata")
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
webtrain_a = unlist(webtrain_a)
