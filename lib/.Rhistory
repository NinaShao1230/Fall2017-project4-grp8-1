sqrt(dim(webtrain_a)[1])
mode(webtrain_a)
webtrain_a_matrix = as.matrix(webtrain_a, nrow = 4151, ncol = 4151)
View(webtrain_a_matrix)
dim(webtrain_a_matrix)
webtrain_a_matrix = as.matrix(webtrain_a)
dim(webtrain_a_matrix)
webtrain_a_matrix[1,]
webtrain_a_matrix[2,]
webtrain_a_matrix[5,]
a <- seq(1, 50)
mode(a)
webtrain_a_matrix = as.numeric(webtrain_a)
webtrain_a_matrix = as.numeric(unlist(webtrain_a))
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
sqrt(dim(webtrain_a)[1])
mode(webtrain_a)
webtrain_a_matrix = as.numeric(unlist(webtrain_a))
webtrain_a_matrix = matrix(webtrain_a_matrix, nrow = 4151, ncol = 4151)
dim(webtrain_a_matrix)
head(webtrain_a_matrix)
webtrain_a_matrix = as.numeric(unlist(webtrain_a))
webtrain_a_matrix[1]
webtrain_a_matrix = matrix(webtrain_a_matrix, nrow = 4151, ncol = 4151)
webtrain_a_matrix[1,1]
webtrain_a_matrix[1,2]
webtrain_a_matrix[1,4151]
webtrain_a_matrix[4151,4151]
View(webtrain_a_matrix)
View(webtrain_a_matrix)
mean(webtrain_a_matrix)
mean(webtrain_a_matrix)
sd(webtrain_a_matrix)
mean(webtrain_a)
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
mean(webtrain_a)
mean(unlist(webtrain_a))
webtrain_a = unlist(webtrain_a)
sqrt(dim(webtrain_a)) # = 4151
sqrt(length(webtrain_a)) # = 4151
mean(webtrain_a)
sd(webtrain_a)
n = 5
webtrain_a_n_5 = webtrain_a
n = 5
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
webtrain_a_matrix = as.numeric(webtrain_a_n_5)
dim(webtrain_a_matrix)
length(webtrain_a_matrix)
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix, nrow = 4151, ncol = 4151)
dim(webtrain_a_matrix_5)
?save
save(webtrain_a_matrix_5,"../output/webtrain_significance_weighting_n=5")
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
webtrain_a_n_5 = webtrain_a
n = 5
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix_5, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
View(webtrain_a_matrix_5)
which(webtrain_a_n_5 == 1)
webtrain_a_n_5 = webtrain_a
t
webtrain_a = unlist(webtrain_a)
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
webtrain_a = unlist(webtrain_a)
sqrt(length(webtrain_a)) # = 4151
mean(webtrain_a)
sd(webtrain_a)
print(mean(webtrain_a),sd(webtrain_a))
print(sd(webtrain_a))
print(mean(webtrain_a))
print(sd(webtrain_a))
webtrain_a_n_5 = webtrain_a
n = 5
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix_5, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
sum(webtrain_a_n_5 == 1)
sum(webtrain_a_n_5 == 1)-i
i - sum(webtrain_a_n_5 == 1)
webtrain_a_n_8 = webtrain_a
n = 8
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_8[i] = 1
}
else{
webtrain_a_n_8[i] = webtrain_a_n_5[i]/8
}
}
webtrain_a_matrix_8 = as.numeric(webtrain_a_n_8)
webtrain_a_matrix_8 = matrix(webtrain_a_matrix_8, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=8.Rdata")
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
save(webtrain_a_matrix_8,file = "../output/webtrain_significance_weighting_n=8.Rdata")
i - sum(webtrain_a_n_5 == 1)
i - sum(webtrain_a_n_8 == 1)
webtrain_a_n_10 = webtrain_a
n = 10
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
webtrain_a = read.csv("../output/webtrain_a.csv", header = FALSE)
webtrain_a = unlist(webtrain_a)
sqrt(length(webtrain_a)) # = 4151
print(mean(webtrain_a))
print(sd(webtrain_a))
webtrain_a_n_5 = webtrain_a
n = 5
for (i in 1:length(webtrain_a)){
if (webtrain[i] >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_5[i] = 1
}
else{
webtrain_a_n_5[i] = webtrain_a_n_5[i]/5
}
}
webtrain_a_matrix_5 = as.numeric(webtrain_a_n_5)
webtrain_a_matrix_5 = matrix(webtrain_a_matrix_5, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_5,file = "../output/webtrain_significance_weighting_n=5.Rdata")
i - sum(webtrain_a_n_5 == 1)
webtrain_a_n_10 = webtrain_a
n = 10
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
webtrain_a_matrix_10 = as.numeric(webtrain_a_n_10)
webtrain_a_matrix_10 = matrix(webtrain_a_matrix, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_10,file = "../output/webtrain_significance_weighting_n=10.Rdata")
webtrain_a_n_8 = webtrain_a
n = 8
for (i in 1:length(webtrain_a)){
if (i >= n){
webtrain_a_n_8[i] = 1
}
else{
webtrain_a_n_8[i] = webtrain_a_n_5[i]/8
}
}
webtrain_a_n_8 = webtrain_a
n = 8
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_8[i] = 1
}
else{
webtrain_a_n_8[i] = webtrain_a_n_5[i]/8
}
}
webtrain_a_matrix_8 = as.numeric(webtrain_a_n_8)
webtrain_a_matrix_8 = matrix(webtrain_a_matrix_8, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_8,file = "../output/webtrain_significance_weighting_n=8.Rdata")
i - sum(webtrain_a_n_8 == 1)
webtrain_a_n_10 = webtrain_a
n = 10
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_10[i] = 1
}
else{
webtrain_a_n_10[i] = webtrain_a_n_10[i]/10
}
}
webtrain_a_matrix_10 = as.numeric(webtrain_a_n_10)
webtrain_a_matrix_10 = matrix(webtrain_a_matrix, nrow = 4151, ncol = 4151)
webtrain_a_matrix_10 = matrix(webtrain_a_matrix_10, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_10,file = "../output/webtrain_significance_weighting_n=10.Rdata")
i - sum(webtrain_a_n_10 == 1)
a1 = i - sum(webtrain_a_n_5 == 1)
a2 = i - sum(webtrain_a_n_8 == 1)
a3 = i - sum(webtrain_a_n_10 == 1)
webtrain_a_n_9 = webtrain_a
n = 9
for (i in 1:length(webtrain_a)){
if (webtrain_a[i] >= n){
webtrain_a_n_9[i] = 1
}
else{
webtrain_a_n_9[i] = webtrain_a_n_9[i]/9
}
}
webtrain_a_matrix_9 = as.numeric(webtrain_a_n_9)
webtrain_a_matrix_9 = matrix(webtrain_a_matrix_9, nrow = 4151, ncol = 4151)
save(webtrain_a_matrix_9,file = "../output/webtrain_significance_weighting_n=9.Rdata")
a1 = i - sum(webtrain_a_n_5 == 1)
a3 = i - sum(webtrain_a_n_9 == 1)
a4 = i - sum(webtrain_a_n_10 == 1)
>>>>>>> e40b7841e08b3018bad25a426a54a024ca722fce
load("../output/web.sp.sim.Rdata")
load("../output/web.etp.sim.Rdata")
load("../output/mv.sp.sim.Rdata")
load("../output/mv.sp.sim.Rdata")
load("../output/web.sp.sim.Rdata")
load("../output/web.msdiff.sim.Rdata")
load("../output/mv.etp.sim.Rdata")
load("../output/mv.msdiff.sim.Rdata")
load("../output/web.sp.sim.Rdata")
load("../output/web.etp.sim.Rdata")
load("../output/web.msdiff.sim.Rdata")
load("../output/mv.sp.sim.Rdata")
load("../output/mv.etp.sim.Rdata")
load("../output/mv.msdiff.sim.Rdata")
diag(data4)
data4 = mv.sp.sim
diag(data4)
diag(data4) = 0
diag(data5)
data5 = mv.etp.sim
diag(data5)
diag(data5) = 0
data6 = mv.msdiff.sim
diag(data6)# dimension of 3 dataset are all 4151 dimension square matrices.
diag(data6) = 0
data1 = web.sp.sim
diag(data1) = 0
data2 = web.entropy.sim
diag(data2) = 0
diag(data3) = 0
data4 = mv.sp.sim
data3 = web.msd.sim
data3 = web.msdiff.sim
diag(data3) = 0
hist(data1,30)
hist(data2,30)
hist(data3,30)
hist(data1,30)
hist(data2,30)
hist(data3,30)
hist(data4,30)
hist(data5,30)
hist(data6,30)
hist(data1,30)
hist(data2,30)
hist(data3,30)
load("../output/web.sp.sim.Rdata")
load("../output/web.etp.sim.Rdata")
load("../output/web.msdiff.sim.Rdata")
load("../output/mv.sp.sim.Rdata")
load("../output/mv.etp.sim.Rdata")
load("../output/mv.msdiff.sim.Rdata")
data1 = web.sp.sim
diag(data1) = 0
data2 = web.entropy.sim
diag(data2) = 0
data3 = web.msdiff.sim
diag(data3) = 0
data4 = mv.sp.sim
diag(data4) = 0
data5 = mv.etp.sim
diag(data5) = 0
data6 = mv.msdiff.sim
diag(data6) = 0
min(data2)
threshold1 = 0.6
threshold2 = 8
threshold3 = 0.6
threshold4 = 0.4
threshold5 = 0.6
threshold6 = 0.9
n = 20
aaa<- function(x,threshold){
a1<- x[order(-x)][1:n]*(x[order(-x)][1:n]>=threshold)
a1[a1==0]<- NA
res<- which(x %in% a1)[1:n]
return(res)
}
data = data1
threshold = threshold1
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_web_sp_n=20_th=0.6.Rdata")
View(value_matrix)
data = data2
threshold = threshold2
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data1[x,result[x,y]]
}
}
}
min(value_matrix)
result
View(value_matrix)
data = data1
data = data2
threshold = threshold2
result = t(apply(data, 1, function(x) aaa(x,threshold)))
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
View(value_matrix)
save(value_matrix, file = "../output/sn_web_entropy_n=20_th=8.Rdata")
data = data3
threshold = threshold3
result = t(apply(data, 1, function(x) aaa(x,threshold)))
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
data = data3
threshold = threshold3
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_web_msd_n=20_th=0.6.Rdata")
data = data4
threshold = threshold4
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.4.Rdata")
data = data45
data = data5
threshold = threshold5
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.6.Rdata")
View(value_matrix)
data = data4
threshold = threshold4
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
View(value_matrix)
threshold4 = 0.3
data = data4
threshold = threshold4
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
View(value_matrix)
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.3.Rdata")
data = data6
threshold = threshold6
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.9.Rdata")
View(value_matrix)
threshold6 = 0.8
data = data6
threshold = threshold6
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.8.Rdata")
threshold6 = 0.7
data = data6
threshold = threshold6
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:4151){
#4151 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.7.Rdata")
sqrt(25553025)
data = data4
threshold = threshold4
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:5055){
#5055 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.3.Rdata")
data = data5
threshold = threshold5
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:5055){
#5055 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.6.Rdata")
data = data6
threshold = threshold6
result = t(apply(data, 1, function(x) aaa(x,threshold)))
value_matrix = matrix(0,dim(result)[1],dim(result)[2])
for(x in 1:5055){
#5055 is the dimension of 'data'
for(y in 1:n){
if(is.na(value_matrix[x,y]) == FALSE){
value_matrix[x,y] = data[x,result[x,y]]
}
}
}
save(value_matrix, file = "../output/sn_movie_sp_n=20_th=0.7.Rdata")
View(value_matrix)
