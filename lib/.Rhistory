web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[2])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
web.feature<-NULL
web.featurename<-NULL
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^A',eachline)){
web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[2])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
}
web.feature
web.train<-matrix(0,ncol=294,nrow=32711)
case=0
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^C',eachline)){
case=case+1
}
if(grepl('^V',eachline)){
visit=unlist(strsplit(eachline, ","))[2]
idx=which(web.feature == visit)
web.train[case,idx]=1
}
}
###########################################################
web.feature<-NULL
web.featurename<-NULL
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^A',eachline)){
web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[2])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
}
webtrain = read.csv("../data/MS_sample/data_train.csv")
line <- readLines("../data/MS_sample/data_train.csv")
length(line)
###########################################################
web.feature<-NULL
web.featurename<-NULL
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^A',eachline)){
web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[2])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
}
HEAD(line)
head(line)
library(recommenderlab)
webtrain = read.csv("../data/MS_sample/data_train.csv")
webtrain = read.csv("../data/MS_sample/data_train.csv")
############################################################
webtrain[,2]
############################################################
webtrain[,2] == C
############################################################
webtrain[,2] == 'C'
############################################################
sum(webtrain[,2] == 'C')
############################################################
nrow = sum(webtrain[,2] == 'C')
which(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
diff(a)
b = diff(a)
max(b)
ncol = max(b)
web.train<-matrix(0,nrow = nrow, ncol = ncol)
View(web.train)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
webtrain = read.csv("../data/MS_sample/data_train.csv")
############################################################
nrow = sum(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
b = diff(a)
ncol = max(b)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
####################write matrix##########################
line <- readLines("../data/MS_sample/data_train.csv")
length(line)
####################write matrix##########################
line <- readLines("../data/MS_sample/data_train.csv")
length(line)
###########################################################
web.feature<-NULL
web.featurename<-NULL
View(webtrain)
head(line)
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^C',eachline)){
web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[3])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
}
###########################################################
web.feature<-NULL
web.featurename<-NULL
for( i in 1:length(line)){
eachline= line[[i]]
if(grepl('^C',eachline)){
web.feature<-c(web.feature,unlist(strsplit(eachline, ","))[3])
web.featurename<-c(web.featurename,unlist(strsplit(eachline, ","))[4])
}
}
web.feature
line[[1]]
line[[2]]
line[2]
length(webtrain)
dim(webtrain)
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
web.feature
webtrain2 = c(webtrain2,webtrain[i,])
webtrain2=NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
webtrain2 = c(webtrain2,webtrain[i,])
}
}
webtrain2=NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "V"){
webtrain2 = c(webtrain2,webtrain[i,])
}
}
webtrain2=NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "V"){
webtrain2[i,] = webtrain[i,]
}
}
webtrain2 = webtrain[webtrain$V1 == V,]
webtrain2 = webtrain[webtrain$V1 == 'V',]
View(webtrain2)
webtrain2[2,]
webtrain2[,2]
webtrain2[,3]
range(webtrain2[,3])
unique(webtrain2[,3])
sum(unique(webtrain2[,3]))
length(unique(webtrain2[,3]))
?
unique
?unique
unique(c(1,1,2,2,3,4,5,6,6,7))
length(unique(c(1,1,2,2,3,4,5,6,6,7)))
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
c = a+1
d = b
for(i in 2:4151){
d[i] = b[i]+b[i-1]
}
d = b
b2 = b
b2[0]
for(i in 1:4150){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
for(i in 1:4150){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
for(i in 2:4150){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
c:d
c[1]:
d[1]
c[2]:
d[2]
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151]
c = a+1
d = b
b2 = b
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151]
d[4150]
d[4149]
d[4150]
d[4151]
d[4151] = 38026
length(c)
c[i]:d[i]
for(i in 1:length(c)){
c[i]:d[i]
}
e[i] = c[i]:d[i]
for(i in 1:length(c)){
e[i] = c[i]:d[i]
}
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i],]
}
web.train.matrix[i,1] = webtrain[c[i]:d[i],]
c[3]:d[3]
webtrain[c[3]:d[3],]
web.train.matrix[1,]
web.train.matrix[1,1]
dim(web.train.matrix)
View(web.train.matrix)
library(recommenderlab)
library(recommenderlab)
webtrain = read.csv("../data/MS_sample/data_train.csv")
############################################################
nrow = sum(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
b = diff(a)
ncol = max(b)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
dim(web.train.matrix)
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
c = a+1
d = b
b2 = b
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151] = 38026
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i], ]
}
web.train.matrix[1,1]
web.train.matrix
[1,3for( i in 1:length(line)){
web.train.matrix[1,3]
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
web.train.matrix[1,3]
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i], ]
}
webtrain[3:4,]
webtrain[3:4,2]
webtrain[3:4,3]
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i],3]
}
############################################################
nrow = sum(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
b = diff(a)
ncol = max(b)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
c = a+1
d = b
b2 = b
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151] = 38026
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i],3]
}
View(web.train.matrix)
for(i in 1:length(c)){
print(webtrain[c[i]:d[i],3])
}
for(i in 1:length(c)){
list_a = webtrain[c[i]:d[i],3])
}
for(i in 1:length(c)){
list_a = webtrain[c[i]:d[i],3])
}
for(i in 1:length(c)){
list_a = webtrain[c[i]:d[i],3])
}
list_a = webtrain[c[i]:d[i],3]
webtrain = read.csv("../data/MS_sample/data_train.csv")
############################################################
nrow = sum(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
b = diff(a)
ncol = max(b)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
c = a+1
d = b
b2 = b
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151] = 38026
for(i in 1:length(c)){
list_a = webtrain[c[i]:d[i],3]
}
for(i in 1:length(c)){
list_a[i] = webtrain[c[i]:d[i],3]
}
list_a
for(i in 1:length(c)){
web.train.matrix[i,] = webtrain[c[i]:d[i],3]
}
d[2]-c[2]
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x])){
web.train.matrix[x,1:d[y]-c[y]] = webtrain[c[y]:d[y],3]
}
}
View(web.train.matrix)
n
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x])){
web.train.matrix[x,1:d[y]-c[y]] = webtrain[c[y]:d[y],3]
}
}
d[1]-c[1]
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]] = webtrain[c[y]:d[y],3]
}
}
d[1]-c[1]+1
c[1]:d[1]
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
}
}
View(web.train.matrix)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(x,y)
}
}
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print("x :" + x)
print("y:"+ y)
}
}
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print("x :",x)
print("y:",y)
}
}
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print("x:")
print(x)
print("y:")
print(y)
}
}
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(y)
}
}
for (x in 1:length(c)){
for(y in 1:length(d[x]-c[x]+1)){
#web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(y)
}
}
for (x in 1:length(c)){
for(y in 1:d[x]-c[x]+1){
#web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(y)
}
}
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
#web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(y)
}
}
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
}
}
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
#web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(x,y)
}
}
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
#web.train.matrix[x,1:d[y]-c[y]+1] = webtrain[c[y]:d[y],3]
print(y)
}
}
1:(d[1]-c[1]+1)
1:(d[2]-c[2]+1)
1:d[1]-c[1]+1
1:(d[1]-c[1]+1)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
web.train.matrix[x,1:(d[y]-c[y]+1)] = webtrain[c[y]:d[y],3]
}
}
View(web.train.matrix)
#####################################################
save(web.train.matrix,file="../output/web.train2.0.Rdata")
colnames(web.train.matrix) = web.feature
dim(web.feature)
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
colnames(web.train.matrix) = web.feature
dim(web.feature)
####################write matrix##########################
###########################################################
web.feature<-NULL
web.featurename<-NULL
library(recommenderlab)
webtrain = read.csv("../data/MS_sample/data_train.csv")
############################################################
nrow = sum(webtrain[,2] == 'C')
a = which(webtrain[,2] == 'C')
b = diff(a)
ncol = max(b)
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
####################write matrix##########################
###########################################################
web.feature<-NULL
web.featurename<-NULL
for (i in 1:dim(webtrain)[1]){
if (webtrain[i,2] == "C"){
web.feature = c(web.feature,webtrain[i,3])
}
}
c = a+1
d = b
b2 = b
for(i in 2:4151){
d[i] = b2[i] + b2[i-1]
b2[i] = d[i]
}
d[4151] = 38026
web.train.matrix<-matrix(0,nrow = nrow, ncol = ncol)
for (x in 1:length(c)){
for(y in 1:(d[x]-c[x]+1)){
web.train.matrix[x,1:(d[y]-c[y]+1)] = webtrain[c[y]:d[y],3]
}
}
dim(web.feature)
length(web.feature)
colnames(web.train.matrix) = web.feature
rownames(web.train.matrix) = web.feature
#####################################################
save(web.train.matrix,file="../output/web.train2.0.Rdata")
